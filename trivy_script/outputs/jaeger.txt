Enumerating objects: 9930, done.
Counting objects:   0% (1/9930)Counting objects:   1% (100/9930)Counting objects:   2% (199/9930)Counting objects:   3% (298/9930)Counting objects:   4% (398/9930)Counting objects:   5% (497/9930)Counting objects:   6% (596/9930)Counting objects:   7% (696/9930)Counting objects:   8% (795/9930)Counting objects:   9% (894/9930)Counting objects:  10% (993/9930)Counting objects:  11% (1093/9930)Counting objects:  12% (1192/9930)Counting objects:  13% (1291/9930)Counting objects:  14% (1391/9930)Counting objects:  15% (1490/9930)Counting objects:  16% (1589/9930)Counting objects:  17% (1689/9930)Counting objects:  18% (1788/9930)Counting objects:  19% (1887/9930)Counting objects:  20% (1986/9930)Counting objects:  21% (2086/9930)Counting objects:  22% (2185/9930)Counting objects:  23% (2284/9930)Counting objects:  24% (2384/9930)Counting objects:  25% (2483/9930)Counting objects:  26% (2582/9930)Counting objects:  27% (2682/9930)Counting objects:  28% (2781/9930)Counting objects:  29% (2880/9930)Counting objects:  30% (2979/9930)Counting objects:  31% (3079/9930)Counting objects:  32% (3178/9930)Counting objects:  33% (3277/9930)Counting objects:  34% (3377/9930)Counting objects:  35% (3476/9930)Counting objects:  36% (3575/9930)Counting objects:  37% (3675/9930)Counting objects:  38% (3774/9930)Counting objects:  39% (3873/9930)Counting objects:  40% (3972/9930)Counting objects:  41% (4072/9930)Counting objects:  42% (4171/9930)Counting objects:  43% (4270/9930)Counting objects:  44% (4370/9930)Counting objects:  45% (4469/9930)Counting objects:  46% (4568/9930)Counting objects:  47% (4668/9930)Counting objects:  48% (4767/9930)Counting objects:  49% (4866/9930)Counting objects:  50% (4965/9930)Counting objects:  51% (5065/9930)Counting objects:  52% (5164/9930)Counting objects:  53% (5263/9930)Counting objects:  54% (5363/9930)Counting objects:  55% (5462/9930)Counting objects:  56% (5561/9930)Counting objects:  57% (5661/9930)Counting objects:  58% (5760/9930)Counting objects:  59% (5859/9930)Counting objects:  60% (5958/9930)Counting objects:  61% (6058/9930)Counting objects:  62% (6157/9930)Counting objects:  63% (6256/9930)Counting objects:  64% (6356/9930)Counting objects:  65% (6455/9930)Counting objects:  66% (6554/9930)Counting objects:  67% (6654/9930)Counting objects:  68% (6753/9930)Counting objects:  69% (6852/9930)Counting objects:  70% (6951/9930)Counting objects:  71% (7051/9930)Counting objects:  72% (7150/9930)Counting objects:  73% (7249/9930)Counting objects:  74% (7349/9930)Counting objects:  75% (7448/9930)Counting objects:  76% (7547/9930)Counting objects:  77% (7647/9930)Counting objects:  78% (7746/9930)Counting objects:  79% (7845/9930)Counting objects:  80% (7944/9930)Counting objects:  81% (8044/9930)Counting objects:  82% (8143/9930)Counting objects:  83% (8242/9930)Counting objects:  84% (8342/9930)Counting objects:  85% (8441/9930)Counting objects:  86% (8540/9930)Counting objects:  87% (8640/9930)Counting objects:  88% (8739/9930)Counting objects:  89% (8838/9930)Counting objects:  90% (8937/9930)Counting objects:  91% (9037/9930)Counting objects:  92% (9136/9930)Counting objects:  93% (9235/9930)Counting objects:  94% (9335/9930)Counting objects:  95% (9434/9930)Counting objects:  96% (9533/9930)Counting objects:  97% (9633/9930)Counting objects:  98% (9732/9930)Counting objects:  99% (9831/9930)Counting objects: 100% (9930/9930)Counting objects: 100% (9930/9930), done.
Compressing objects:   0% (1/5311)Compressing objects:   1% (54/5311)Compressing objects:   2% (107/5311)Compressing objects:   3% (160/5311)Compressing objects:   4% (213/5311)Compressing objects:   5% (266/5311)Compressing objects:   6% (319/5311)Compressing objects:   7% (372/5311)Compressing objects:   8% (425/5311)Compressing objects:   9% (478/5311)Compressing objects:  10% (532/5311)Compressing objects:  11% (585/5311)Compressing objects:  12% (638/5311)Compressing objects:  13% (691/5311)Compressing objects:  14% (744/5311)Compressing objects:  15% (797/5311)Compressing objects:  16% (850/5311)Compressing objects:  17% (903/5311)Compressing objects:  18% (956/5311)Compressing objects:  19% (1010/5311)Compressing objects:  20% (1063/5311)Compressing objects:  21% (1116/5311)Compressing objects:  22% (1169/5311)Compressing objects:  23% (1222/5311)Compressing objects:  24% (1275/5311)Compressing objects:  25% (1328/5311)Compressing objects:  26% (1381/5311)Compressing objects:  27% (1434/5311)Compressing objects:  28% (1488/5311)Compressing objects:  29% (1541/5311)Compressing objects:  30% (1594/5311)Compressing objects:  31% (1647/5311)Compressing objects:  32% (1700/5311)Compressing objects:  33% (1753/5311)Compressing objects:  34% (1806/5311)Compressing objects:  35% (1859/5311)Compressing objects:  36% (1912/5311)Compressing objects:  37% (1966/5311)Compressing objects:  38% (2019/5311)Compressing objects:  39% (2072/5311)Compressing objects:  40% (2125/5311)Compressing objects:  41% (2178/5311)Compressing objects:  42% (2231/5311)Compressing objects:  43% (2284/5311)Compressing objects:  44% (2337/5311)Compressing objects:  45% (2390/5311)Compressing objects:  46% (2444/5311)Compressing objects:  47% (2497/5311)Compressing objects:  48% (2550/5311)Compressing objects:  49% (2603/5311)Compressing objects:  50% (2656/5311)Compressing objects:  51% (2709/5311)Compressing objects:  52% (2762/5311)Compressing objects:  53% (2815/5311)Compressing objects:  54% (2868/5311)Compressing objects:  55% (2922/5311)Compressing objects:  56% (2975/5311)Compressing objects:  57% (3028/5311)Compressing objects:  58% (3081/5311)Compressing objects:  59% (3134/5311)Compressing objects:  60% (3187/5311)Compressing objects:  61% (3240/5311)Compressing objects:  62% (3293/5311)Compressing objects:  63% (3346/5311)Compressing objects:  64% (3400/5311)Compressing objects:  65% (3453/5311)Compressing objects:  66% (3506/5311)Compressing objects:  67% (3559/5311)Compressing objects:  68% (3612/5311)Compressing objects:  69% (3665/5311)Compressing objects:  70% (3718/5311)Compressing objects:  71% (3771/5311)Compressing objects:  72% (3824/5311)Compressing objects:  73% (3878/5311)Compressing objects:  74% (3931/5311)Compressing objects:  75% (3984/5311)Compressing objects:  76% (4037/5311)Compressing objects:  77% (4090/5311)Compressing objects:  78% (4143/5311)Compressing objects:  79% (4196/5311)Compressing objects:  80% (4249/5311)Compressing objects:  81% (4302/5311)Compressing objects:  82% (4356/5311)Compressing objects:  83% (4409/5311)Compressing objects:  84% (4462/5311)Compressing objects:  85% (4515/5311)Compressing objects:  86% (4568/5311)Compressing objects:  87% (4621/5311)Compressing objects:  88% (4674/5311)Compressing objects:  89% (4727/5311)Compressing objects:  90% (4780/5311)Compressing objects:  91% (4834/5311)Compressing objects:  92% (4887/5311)Compressing objects:  93% (4940/5311)Compressing objects:  94% (4993/5311)Compressing objects:  95% (5046/5311)Compressing objects:  96% (5099/5311)Compressing objects:  97% (5152/5311)Compressing objects:  98% (5205/5311)Compressing objects:  99% (5258/5311)Compressing objects: 100% (5311/5311)Compressing objects: 100% (5311/5311), done.
Total 9930 (delta 6414), reused 7121 (delta 4359), pack-reused 0

cmd/agent/Dockerfile (dockerfile)
=================================
Tests: 24 (SUCCESSES: 23, FAILURES: 1, EXCEPTIONS: 0)
Failures: 1 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 0, CRITICAL: 0)

LOW: Add HEALTHCHECK instruction in your Dockerfile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.

See https://avd.aquasec.com/misconfig/ds026
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



cmd/all-in-one/Dockerfile (dockerfile)
======================================
Tests: 24 (SUCCESSES: 22, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

HIGH: Specify at least 1 USER command in Dockerfile with non-root user as argument
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.

See https://avd.aquasec.com/misconfig/ds002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Add HEALTHCHECK instruction in your Dockerfile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.

See https://avd.aquasec.com/misconfig/ds026
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



cmd/anonymizer/Dockerfile (dockerfile)
======================================
Tests: 24 (SUCCESSES: 22, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

HIGH: Specify at least 1 USER command in Dockerfile with non-root user as argument
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.

See https://avd.aquasec.com/misconfig/ds002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Add HEALTHCHECK instruction in your Dockerfile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.

See https://avd.aquasec.com/misconfig/ds026
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



cmd/collector/Dockerfile (dockerfile)
=====================================
Tests: 24 (SUCCESSES: 22, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

HIGH: Specify at least 1 USER command in Dockerfile with non-root user as argument
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.

See https://avd.aquasec.com/misconfig/ds002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Add HEALTHCHECK instruction in your Dockerfile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.

See https://avd.aquasec.com/misconfig/ds026
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



cmd/es-index-cleaner/Dockerfile (dockerfile)
============================================
Tests: 24 (SUCCESSES: 22, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

HIGH: Specify at least 1 USER command in Dockerfile with non-root user as argument
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.

See https://avd.aquasec.com/misconfig/ds002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Add HEALTHCHECK instruction in your Dockerfile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.

See https://avd.aquasec.com/misconfig/ds026
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



cmd/es-rollover/Dockerfile (dockerfile)
=======================================
Tests: 24 (SUCCESSES: 22, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

HIGH: Specify at least 1 USER command in Dockerfile with non-root user as argument
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.

See https://avd.aquasec.com/misconfig/ds002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Add HEALTHCHECK instruction in your Dockerfile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.

See https://avd.aquasec.com/misconfig/ds026
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



cmd/ingester/Dockerfile (dockerfile)
====================================
Tests: 24 (SUCCESSES: 22, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

HIGH: Specify at least 1 USER command in Dockerfile with non-root user as argument
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.

See https://avd.aquasec.com/misconfig/ds002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Add HEALTHCHECK instruction in your Dockerfile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.

See https://avd.aquasec.com/misconfig/ds026
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



cmd/query/Dockerfile (dockerfile)
=================================
Tests: 24 (SUCCESSES: 22, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

HIGH: Specify at least 1 USER command in Dockerfile with non-root user as argument
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.

See https://avd.aquasec.com/misconfig/ds002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Add HEALTHCHECK instruction in your Dockerfile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.

See https://avd.aquasec.com/misconfig/ds026
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



cmd/remote-storage/Dockerfile (dockerfile)
==========================================
Tests: 24 (SUCCESSES: 22, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

HIGH: Specify at least 1 USER command in Dockerfile with non-root user as argument
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.

See https://avd.aquasec.com/misconfig/ds002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Add HEALTHCHECK instruction in your Dockerfile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.

See https://avd.aquasec.com/misconfig/ds026
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



cmd/tracegen/Dockerfile (dockerfile)
====================================
Tests: 24 (SUCCESSES: 22, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

HIGH: Specify at least 1 USER command in Dockerfile with non-root user as argument
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.

See https://avd.aquasec.com/misconfig/ds002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Add HEALTHCHECK instruction in your Dockerfile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.

See https://avd.aquasec.com/misconfig/ds026
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



crossdock/Dockerfile (dockerfile)
=================================
Tests: 24 (SUCCESSES: 22, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

HIGH: Specify at least 1 USER command in Dockerfile with non-root user as argument
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.

See https://avd.aquasec.com/misconfig/ds002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Add HEALTHCHECK instruction in your Dockerfile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.

See https://avd.aquasec.com/misconfig/ds026
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



docker/base/Dockerfile (dockerfile)
===================================
Tests: 24 (SUCCESSES: 22, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

HIGH: Specify at least 1 USER command in Dockerfile with non-root user as argument
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.

See https://avd.aquasec.com/misconfig/ds002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Add HEALTHCHECK instruction in your Dockerfile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.

See https://avd.aquasec.com/misconfig/ds026
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



docker/debug/Dockerfile (dockerfile)
====================================
Tests: 24 (SUCCESSES: 22, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

HIGH: Specify at least 1 USER command in Dockerfile with non-root user as argument
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.

See https://avd.aquasec.com/misconfig/ds002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Add HEALTHCHECK instruction in your Dockerfile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.

See https://avd.aquasec.com/misconfig/ds026
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



examples/hotrod/Dockerfile (dockerfile)
=======================================
Tests: 24 (SUCCESSES: 22, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

HIGH: Specify at least 1 USER command in Dockerfile with non-root user as argument
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.

See https://avd.aquasec.com/misconfig/ds002
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Add HEALTHCHECK instruction in your Dockerfile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.

See https://avd.aquasec.com/misconfig/ds026
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



examples/hotrod/kubernetes/base/hotrod/deployment.yaml (kubernetes)
===================================================================
Tests: 141 (SUCCESSES: 132, FAILURES: 9, EXCEPTIONS: 0)
Failures: 9 (UNKNOWN: 0, LOW: 6, MEDIUM: 3, HIGH: 0, CRITICAL: 0)

MEDIUM: Container 'example-hotrod' of Deployment 'example-hotrod' should set 'securityContext.allowPrivilegeEscalation' to false
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 examples/hotrod/kubernetes/base/hotrod/deployment.yaml:19-40
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  19 ┌       - image: jaegertracing/example-hotrod:latest
  20 │         name: example-hotrod
  21 │         args: ["all"]
  22 │         env:
  23 │           - name: JAEGER_AGENT_HOST
  24 │             value: localhost
  25 │           - name: JAEGER_AGENT_PORT
  26 │             value: "6831"
  27 └         ports:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Container 'example-hotrod' of Deployment 'example-hotrod' should add 'ALL' to 'securityContext.capabilities.drop'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 examples/hotrod/kubernetes/base/hotrod/deployment.yaml:19-40
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  19 ┌       - image: jaegertracing/example-hotrod:latest
  20 │         name: example-hotrod
  21 │         args: ["all"]
  22 │         env:
  23 │           - name: JAEGER_AGENT_HOST
  24 │             value: localhost
  25 │           - name: JAEGER_AGENT_PORT
  26 │             value: "6831"
  27 └         ports:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


MEDIUM: Container 'example-hotrod' of Deployment 'example-hotrod' should set 'securityContext.runAsNonRoot' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
'runAsNonRoot' forces the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 examples/hotrod/kubernetes/base/hotrod/deployment.yaml:19-40
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  19 ┌       - image: jaegertracing/example-hotrod:latest
  20 │         name: example-hotrod
  21 │         args: ["all"]
  22 │         env:
  23 │           - name: JAEGER_AGENT_HOST
  24 │             value: localhost
  25 │           - name: JAEGER_AGENT_PORT
  26 │             value: "6831"
  27 └         ports:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


MEDIUM: Container 'example-hotrod' of Deployment 'example-hotrod' should specify an image tag
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
It is best to avoid using the ':latest' image tag when deploying containers in production. Doing so makes it hard to track which version of the image is running, and hard to roll back the version.

See https://avd.aquasec.com/misconfig/ksv013
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 examples/hotrod/kubernetes/base/hotrod/deployment.yaml:19-40
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  19 ┌       - image: jaegertracing/example-hotrod:latest
  20 │         name: example-hotrod
  21 │         args: ["all"]
  22 │         env:
  23 │           - name: JAEGER_AGENT_HOST
  24 │             value: localhost
  25 │           - name: JAEGER_AGENT_PORT
  26 │             value: "6831"
  27 └         ports:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Container 'example-hotrod' of Deployment 'example-hotrod' should set 'securityContext.readOnlyRootFilesystem' to true
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 examples/hotrod/kubernetes/base/hotrod/deployment.yaml:19-40
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  19 ┌       - image: jaegertracing/example-hotrod:latest
  20 │         name: example-hotrod
  21 │         args: ["all"]
  22 │         env:
  23 │           - name: JAEGER_AGENT_HOST
  24 │             value: localhost
  25 │           - name: JAEGER_AGENT_PORT
  26 │             value: "6831"
  27 └         ports:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Container 'example-hotrod' of Deployment 'example-hotrod' should set 'securityContext.runAsUser' > 10000
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 examples/hotrod/kubernetes/base/hotrod/deployment.yaml:19-40
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  19 ┌       - image: jaegertracing/example-hotrod:latest
  20 │         name: example-hotrod
  21 │         args: ["all"]
  22 │         env:
  23 │           - name: JAEGER_AGENT_HOST
  24 │             value: localhost
  25 │           - name: JAEGER_AGENT_PORT
  26 │             value: "6831"
  27 └         ports:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Container 'example-hotrod' of Deployment 'example-hotrod' should set 'securityContext.runAsGroup' > 10000
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 examples/hotrod/kubernetes/base/hotrod/deployment.yaml:19-40
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  19 ┌       - image: jaegertracing/example-hotrod:latest
  20 │         name: example-hotrod
  21 │         args: ["all"]
  22 │         env:
  23 │           - name: JAEGER_AGENT_HOST
  24 │             value: localhost
  25 │           - name: JAEGER_AGENT_PORT
  26 │             value: "6831"
  27 └         ports:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
The RuntimeDefault/Localhost seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 examples/hotrod/kubernetes/base/hotrod/deployment.yaml:19-40
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  19 ┌       - image: jaegertracing/example-hotrod:latest
  20 │         name: example-hotrod
  21 │         args: ["all"]
  22 │         env:
  23 │           - name: JAEGER_AGENT_HOST
  24 │             value: localhost
  25 │           - name: JAEGER_AGENT_PORT
  26 │             value: "6831"
  27 └         ports:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


LOW: container should drop all
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 examples/hotrod/kubernetes/base/hotrod/deployment.yaml:19-40
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  19 ┌       - image: jaegertracing/example-hotrod:latest
  20 │         name: example-hotrod
  21 │         args: ["all"]
  22 │         env:
  23 │           - name: JAEGER_AGENT_HOST
  24 │             value: localhost
  25 │           - name: JAEGER_AGENT_PORT
  26 │             value: "6831"
  27 └         ports:
  ..   
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────



plugin/storage/cassandra/Dockerfile (dockerfile)
================================================
Tests: 24 (SUCCESSES: 23, FAILURES: 1, EXCEPTIONS: 0)
Failures: 1 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 0, CRITICAL: 0)

LOW: Add HEALTHCHECK instruction in your Dockerfile
═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
You should add HEALTHCHECK instruction in your docker container images to perform the health check on running containers.

See https://avd.aquasec.com/misconfig/ds026
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


